# Generated by Django 4.0 on 2024-01-17 10:53

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryOfTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryOfTaskName', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Category Of Task',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CompanyFullName', models.CharField(blank=True, max_length=255, null=True)),
                ('CompanyShortName', models.CharField(blank=True, max_length=50, null=True)),
                ('CompanyLogo', models.ImageField(blank=True, height_field=10, null=True, upload_to='', width_field=10)),
                ('CompanyAddress', models.CharField(blank=True, max_length=50, null=True)),
                ('CompanyPhone', models.CharField(blank=True, max_length=50, null=True)),
                ('CompanyFax', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DepartmentName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Efforts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EffortsId', models.CharField(blank=True, max_length=127, null=True)),
            ],
            options={
                'verbose_name_plural': 'Efforts',
            },
        ),
        migrations.CreateModel(
            name='EffortsStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Comments', models.TextField()),
                ('TimeOfAction', models.TimeField()),
                ('DateOfAction', models.DateTimeField(default=None)),
                ('StartTimeThisDay', models.TimeField()),
                ('FinishTimeThisDay', models.TimeField()),
                ('EffortsId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TaskManagerApp.efforts')),
            ],
            options={
                'verbose_name_plural': 'EffortsStats',
            },
        ),
        migrations.CreateModel(
            name='ITTaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ITTaskTypeName', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'IT Task Type',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Surname', models.CharField(blank=True, max_length=50, null=True)),
                ('Patronymic', models.CharField(blank=True, max_length=50, null=True)),
                ('PersonFullName', models.CharField(blank=True, max_length=150, null=True)),
                ('WorkPhone', models.CharField(blank=True, max_length=4, null=True)),
                ('MobilePhone', models.CharField(blank=True, max_length=11, null=True)),
                ('Email', models.CharField(blank=True, max_length=255, null=True)),
                ('Position', models.CharField(blank=True, max_length=150, null=True)),
                ('CompanyName', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.company')),
                ('DepartmentName', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.department')),
            ],
            options={
                'verbose_name_plural': 'People',
            },
        ),
        migrations.CreateModel(
            name='PriorityInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PriorityWeight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('QuantityOfAsk', models.PositiveIntegerField()),
                ('UsersConcern', models.PositiveIntegerField()),
                ('AllUsersCnt', models.PositiveIntegerField()),
                ('UsersProcent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('PriorityName', models.CharField(max_length=255)),
                ('PriorityCalculated', models.DecimalField(decimal_places=2, max_digits=5)),
                ('NpriorCalculated', models.PositiveIntegerField()),
                ('RealPriority', models.DecimalField(decimal_places=4, max_digits=6)),
            ],
            options={
                'verbose_name_plural': 'Priority Info',
            },
        ),
        migrations.CreateModel(
            name='ResultOfTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ResultOfTaskName', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Result Of Task',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ServiceName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ServiceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TaskManagerApp.service')),
            ],
        ),
        migrations.CreateModel(
            name='Situation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SituationType', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TaskTypeName', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Task Type',
            },
        ),
        migrations.CreateModel(
            name='TypeOfAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TypeOfActionName', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TaskId', models.CharField(blank=True, max_length=32, null=True)),
                ('TaskName', models.CharField(max_length=255)),
                ('DateRegistration', models.DateTimeField(db_index=True, default=datetime.date.today)),
                ('Description', models.CharField(max_length=255)),
                ('DateOfDone', models.DateTimeField(default=None)),
                ('Comments', models.URLField(max_length=1000)),
                ('manual_selection', models.PositiveIntegerField()),
                ('manual_sort', models.PositiveIntegerField()),
                ('PriorityColor', models.PositiveIntegerField()),
                ('Author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.user')),
                ('CategoryOfTaskName', models.ManyToManyField(to='TaskManagerApp.CategoryOfTask')),
                ('CompanyName', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.company')),
                ('EffortsId', models.ManyToManyField(through='TaskManagerApp.EffortsStats', to='TaskManagerApp.Efforts')),
                ('ITTaskTypeName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.ittasktype')),
                ('PersonFullName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.person')),
                ('Priority', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.priorityinfo')),
                ('ProjectName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.task')),
                ('ResultOfTaskName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.resultoftask')),
                ('ServiceName', models.ManyToManyField(through='TaskManagerApp.ServiceSet', to='TaskManagerApp.Service')),
                ('SituationName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.situation')),
                ('TaskTypeId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.tasktype')),
                ('TypeOfActionName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TaskManagerApp.typeofaction')),
            ],
        ),
        migrations.AddField(
            model_name='serviceset',
            name='TaskId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TaskManagerApp.task'),
        ),
        migrations.AddField(
            model_name='effortsstats',
            name='TaskId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TaskManagerApp.task'),
        ),
    ]
